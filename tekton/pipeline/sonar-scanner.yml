apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: sonar-task
spec:
  workspaces:
    - name: output  # This is the shared workspace containing the repo files 
  params:
    - name: SONAR_PROJECT_KEY
      type: string
      description: SonarCloud Project Key
    - name: SONAR_ORGANIZATION
      type: string
      description: SonarCloud Organization
  steps:
    - name: run-sonar-scanner
      image: sonarsource/sonar-scanner-cli:latest
      env:
        - name: SONAR_TOKEN
          valueFrom:
            secretKeyRef:
              name: sonarcloud-token
              key: SONAR_TOKEN
      script: |
        #!/bin/sh
        # Depuración: verificar que el código está disponible
        echo "Contenido del workspace:"
        ls -la $(workspaces.output.path)
        cd $(workspaces.output.path)
        sonar-scanner \
          -Dsonar.projectKey=$(params.SONAR_PROJECT_KEY) \
          -Dsonar.organization=$(params.SONAR_ORGANIZATION) \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.sources=src \
          -Dsonar.exclusions=**/test/**,**/*.java,**/*.scss \
          -Dsonar.java.binaries=none \
          -Dsonar.qualitygate.wait=false \
          -X
      # -Dsonar.exclusions=**/*.java \
      #resources:
      #  requests:
      #    memory: "1Gi"
      #    cpu: "500m"
      #  limits:
      #    memory: "2Gi"
      #    cpu: "2"

    - name: extract-task-id
      image: ubuntu:latest
      script: |
        #!/bin/sh
        if [ ! -f /workspace/output/.scannerwork/report-task.txt ]; then
          echo "SonarCloud report-task.txt not found!"
          exit 1
        fi
        task_id=$(grep 'ceTaskId' /workspace/output/.scannerwork/report-task.txt | cut -d '=' -f 2)
        echo "Task ID: $task_id"
        echo $task_id > /workspace/output/task-id.txt
      