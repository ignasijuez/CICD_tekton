apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ci-pipeline
spec:
  description: |
    This pipeline clones a git repo, then builds db and app
  params:
    - name: repo-url
      type: string
      description: The git repo URL to clone from
    - name: image-reference
      type: string
  workspaces:
    - name: shared-workspace
      description: |
        This workspace contains the cloned repo files, so they can be read by the next task
    - name: docker-credentials

  tasks:
    - name: checkout
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.repo-url)

    - name: build-app
      runAfter: ["checkout"]
      taskRef:
        name: maven-build
      params:
          - name: workspacePath
            value: "$(workspaces.output.path)"
      workspaces:
        - name: output
          workspace: shared-workspace

    - name: report-status
      runAfter: [build-app]
      taskRef:
        name: report-status
      params:
        - name: stageName
          value: "Maven Build"
        - name: status
          value: "$(tasks.build-app.results.status)"
        - name: details
          value: "$(tasks.build-app.results.details)"
          
    - name: build-push
      runAfter: ["build-app"]
      taskRef:
        name: kaniko
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: dockerconfig
          workspace: docker-credentials
      params:
        - name: IMAGE
          value: $(params.image-reference)

    - name: deploy-mysql
      runAfter: ["build-push"]
      taskRef:
        name: deploy-mysql
      workspaces:
        - name: output
          workspace: shared-workspace

    - name: deploy-app
      runAfter: ["deploy-mysql"]
      taskRef:
        name: spring-app-deployment-apply
      workspaces:
        - name: output
          workspace: shared-workspace
  
  finally:
    - name: notify-completion
      taskSpec:
        steps:
          - name: notify-final-status
            image: curlimages/curl
            script: |
              curl -X POST -H "Content-Type: application/json" \
                -d '{"pipeline": "ci-pipeline", "status": "$(tasks.check-out.status)", "details": "Pipeline completed"}' \
                https://httpbin.org/post
